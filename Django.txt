We use project skillshare as an example:

# create and activate the virtual environment
virtualenv skillshare
cd skillshare
source bin/acitivate

# using freeze
pip freeze
pip install django==1.6.1

# start a project
django-admin.py startproject mvp_landing

# run the local server
python manage.py runserver
pip install south django-registration stripe

# start an app
python manage.py startapp signup

# everytime when the tables change
python manage.py syncdb

# collect local files for production
python manage.py collectstatic


--------------------------
# using south
https://www.youtube.com/watch?v=nmWHkng99kE&list=PLEsfXFp6DpzT5veidCTZ1mQriBX0Mu2LF&index=8
pip install south
	## then add 'south', to INSTALLED_APPS in settings.py
python manage.py syncdb
	## run the syncdb above to make sure the db is sync
python manage.py convert_to_south myapp
	## convert the myapp to be managed by south
python manage.py schemamigration myapp --auto
	## when you add new schema to a table, add files to migration folder
python manage.py migrate
	## migrate all the apps, to make the changes actually happen (not just in migration folder)
python manage.py migrate myapp
	## just migrate myapp

Summary of South:
#1) Install south: pip install south, add south to settings.py in INSTALLED_APPS
#2) Ensure Model is in the synced in database
#3) Convert the model to south with: python manage.py convert_to_south appname
#4) Make changes to model
#5) Run schemamigtation: python manage.py schemamigration appanme --auto
#6) Run migrate: python manage.py migrate

--------------------------
# upload to Heroku
https://www.youtube.com/watch?v=WaICRuGJnGY&index=23&list=PLEsfXFp6DpzT5veidCTZ1mQriBX0Mu2LF
https://www.youtube.com/watch?v=L3OGcJXC6-E&list=PLEsfXFp6DpzT5veidCTZ1mQriBX0Mu2LF&index=24
https://devcenter.heroku.com/articles/getting-started-with-django

Keypoints:
settings folder: __init__.py base.py local.py production.py
base.py, local.py = settings.py (remember to modify the BASE_DIR)
settings.py -> settings_old.py
requirement.txt
Profile
.gitignore
some changes to wsgi.py and settings.py(actually to production.py)


git init
git add .
git commit -m "comments"
heroku create
git push heroku master
heroku run python manage.py syncdb
heroku ps:scale web=1
	## set the dyno=1
heroku open

heroku run python manage.py syncdb
	## run syncdb first once you push your project to heroku
heroku run bash
	## get into the bash


